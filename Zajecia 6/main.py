from Bio import SeqIO, Entrez
from Bio.Blast import NCBIWWW, NCBIXML


def read_blast(sequence, blast_type, db):
    result_handle = NCBIWWW.qblast(blast_type, db, sequence, hitlist_size=10)
    blast_records = NCBIXML.parse(result_handle)
    blast_record = next(blast_records)

    for alignment in blast_record.alignments:
        print(alignment)
        print('Alignment----------------------------------')
        print('title:', alignment.title)
        print('length:', alignment.length)
        for hsp in alignment.hsps:
            print('HSP : ')
            print('e value:', hsp.expect)
            print(hsp.query[0:75] + '...')
            print(hsp.match[0:75] + '...')
            print(hsp.sbjct[0:75] + '...')


def get_sequence_name(seq_term):
    Entrez.email = "bszwaja20@gmail.com"

    handle = Entrez.esearch(db="gene", term=seq_term)
    result = Entrez.read(handle)

    return result["IdList"][0]


def get_sequence_by_id(seq_id):
    Entrez.email = "bszwaja20@gmail.com"

    handle = Entrez.efetch(db="nucleotide", id=seq_id, rettype="gb", retmode="text")
    record = SeqIO.read(handle, "genbank")

    return record.seq


def get_nm_000539_3():
    return get_sequence_by_id(get_sequence_name("NM_000539.3"))


if __name__ == '__main__':
    print("####ZADANIE 3####")
    seq_ex_3 = "GTACCTTGATTTCGTATTCTGAGAGGCTGCTGCTTAGCGGTAGCCCCTTGGTTTCCGTGGCAACGGAAAAGCGCGGGAATTACAGATAAATTAAAACTGCGACTGCGCGGCGTGAGCTCGCTGAGACTTCCTGGACGGGGGACAGGCTGTGGGGTTTCTCAGATAACTGGGCCCCTGCGCTCAGGAGGCCTTCACCCTCTGCTCTGGGTAAAGTTCATTGGAACAGAAAGAAATGGATTTATCTGCTCTTCGCGTTGAAGAAGTACAAAATGTCATTAATGCTATGCAGAAAATCTTAGAGTGTCCCATCTGTCTGGAGTTGATCAAGGAACCTGTCTCCACAAAGTGTGACCACATATTTTGCAAATTTTGCATGCTGAAACTTCTCAACCAGAAGAAAGGGCCTTCACAGTGTCCTTTATGTAAGAATGATATAACCAAAAGGAGCCTACAAGAAAGTACGAGATTTAGTCAACTTGTTGAAGAGCTATTGAAAATCATTTGTGCTTTTCAGCTTGACACAGGTTTGGAGTATGCAAACAGCTATAATTTTGCAAAAAAGGAAAATAACTCTCCTGAACATCTAAAAGATGAAGTTTCTATCATCCAAAGTATGGGCTACAGAAACCGTGCCAAAAGACTTCTACAGAGTGAACCCGAAAATCCTTCCTTGCAGGAAACCAGTCTCAGTGTCCAACTCTCTAACCTTGGAACTGTGAGAACTCTGAGGACAAAGCAGCGGATACAACCTCAAAAGACGTCTGTCTACATTGAATTGGGATCTGATTCTTCTGAAGATACCGTTAATAAGGCAACTTATTGCAGTGTGGGAGATCAAGAATTGTTACAAATCACCCCTCAAGGAACCAGGGATGAAATCAGTTTGGATTCTGCAAAAAAGGCTGCTTGTGAATTTTCTGAGACGGATGTAACAAATACTGAACATCATCAACCCAGTAATAATGATTTGAACACCACTGAGAAGCGTGCAGCTGAGAGGCATCCAGAAAAGTATCAGGGTAGTTCTGTTTCAAACTTGCATGTGGAGCCATGTGGCACAAATACTCATGCCAGCTCATTACAGCATGAGAACAGCAGTTTATTACTCACTAAAGACAGAATGAATGTAGAAAAGGCTGAATTCTGTAATAAAAGCAAACAGCCTGGCTTAGCAAGGAGCCAACATAACAGATGGGCTGGAAGTAAGGAAACATGTAATGATAGGCGGACTCCCAGCACAGAAAAAAAGGTAGATCTGAATGCTGATCCCCTGTGTGAGAGAAAAGAATGGAATAAGCAGAAACTGCCATGCTCAGAGAATCCTAGAGATACTGAAGATGTTCCTTGGATAACACTAAATAGCAGCATTCAGAAAGTTAATGAGTGGTTTTCCAGAAGTGATGAACTGTTAGGTTCTGATGACTCACATGATGGGGAGTCTGAATCAAATGCCAAAGTAGCTGATGTATTGGACGTTCTAAATGAGGTAGATGAATATTCTGGTTCTTCAGAGAAAATAGACTTACTGGCCAGTGATCCTCATGAGGCTTTAATATGTAAAAGTGAAAGAGTTCACTCCAAATCAGTAGAGAGTAATATTGAAGACAAAATATTTGGGAAAACCTATCGGAAGAAGGCAAGCCTCCCCAACTTAAGCCATGTAACTGAAAATCTAATTATAGGAGCATTTGTTACTGAGCCACAGATAATACAAGAGCGTCCCCTC"
    read_blast(seq_ex_3, "blastn", "nt")

    print("####ZADANIE 4####")
    seq_ex_4 = "MKSILDGLADTTFRTITTDLLGSPFQEKMTAGDNPQLVPADQVNITEFYNKSLSSFKENEENIQCGENFMDIECFMVLNPSQQLAIAVLSLTLGTFTVLENLLVLCVILHSRSLRCRPSYHFIGSLAVADLLGSVIFVYSFIDFHVFHRKDSRNVFLFKLGGVTASFTASVGSLFLTAIDRYISIHRPLAYKRIVTRPKAVVAFCLMWTIAIVIAVLPLLGWNCEKLQSVCSDIFPHIDETYLMFWIGVTSVLLLFIVYAYMYILWKAHSHAVRMIQRGTQKSIIIHTSEDGKVQVTRPDQARMDIRLAKTLVLILVVLIICWGPLLAIMVYDVFGKMNKLIKTVFAFCSMLCLLNSTVNPIIYALRSKDLRHAFRSMFPSCEGTAQPLDNSMGDSDCLHKHANNAASVHRAAESCIKSTVKIAKVTMSVSTDTSAEAL"
    read_blast(seq_ex_4, "blastp", "nr")

    print("Jest to białko CNR1")
    print("Odgrywa ono kluczową rolę w układzie endokannabinoidowym człowieka.")
    print("Układ ten jest odpowiedzialny za regulację procesów takich jak:")
    print("  - Nastrój")
    print("  - Sen")
    print("  - Apetyt")
    print("  - Funkcje immunologiczne")
    print("  - Ból")
    print()
    print("Zlokalizowany jest na chromosomie 6")
    print()
    print("Inne organizmy posiadające taką samą bądź podobną strukturę białka:")
    print("  - Gorilla gorilla gorilla - Goryl nizinny")
    print("  - Colobus angolensis palliatus - Gereza angolańska")
    print("  - Hippopotamus amphibius kiboko - Hipopotam nilowy")
    print("  - Ovis ammon polii x Ovis aries")
    print("  - Balaenoptera physalus - Płetwal zwyczajny")
    print("  - ...")

    print("####ZADANIE 5####")
    seq_ex_5 = get_nm_000539_3()
    read_blast(seq_ex_5, "tblastx", 'nt')
