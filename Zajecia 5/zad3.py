from Bio import pairwise2
from Bio import SeqIO
from Bio.Align import substitution_matrices


if __name__ == '__main__':
    subs_mat = substitution_matrices.load('PAM250')

    seq11 = "MEANLYPRTEINSTRING"
    seq12 = "PLEASANTLYEINSTEIN"

    seq1 = "YVCVKCWRKFDWCTSCNASQFRQAHMWKFTIGLVFPAMACVMFWWYAGVKKPSYGTAKVCFGYLHLPWGKICFEAVDRGHQLCIDQTFWAQSGYCGEMATNVVDCSVLMEAARPPEENWSCMAMVKLGQHAHENSGTNNLQAYSVECTSEGCRWKDIIIDPDTRCKNYWMYTCFPEDSYQTNFPFGTMADWWILANYLFCVNEHAAFLSDKDQNEIELPVMADKRHMHRGNAFLMQEKRECHCEFCHYAICDALSGNAISLGMAVIKSCQTPLQRRAVCAVWMDLKWQQIEIIQCIHTHETKQQIKYYMYQESTYRQSMPQSEFHFWMKTHMVLSGNCQWQDPETWRTVMQHNSFASSNDQMHDVLGGTNPHICTQEGFYGRPLDVGNNMAINCIPPLSFNGIRPEHWIIYGWFPCNRLDHTSWREINAMIALSCCIMERFSKMWDYPQNNITLYYQGTCGRMEPQWVISVGAICNSLEHTGCPWEQKQQCDKSHVNCPFKHLMEALPQMEPSYFYNFEDMNILWLKNERQSRRWHSWETSEQDGVYFDGLEPWVLGKQNYEPIHVCKNLYICSANDTWKMPSFWWTFKHKGDVDDQHEETRPGNDATEQDIQAQESVIGMCVPEIWDRDWYPPKKPPYEVNHWHWLPVYLIWAFKRTQACSSRMKTQGQLYWINCSWYTPKSGGHNAGEYQLCFFHHEYYRPIMKWIVPLTRHNGGCVSHWLRSIWMMYGAEKWLKMAPMRDRQGVHQLQVIKDLTFPGKFLKNCFYSDEGRYYGDRQPMLSPRFHTHDWYLGWISNWGASRHYNMETIKAVCVQRGKCHIPRDMFQLVHNHFVMFLVCVDITGGCQWCCAWWWSHWPICWSTQQMEILMHQPCTATYHMITDCPNFQRPKHLFVGVLC"
    seq2 = "NIPRPGPKLLPKFCWCLVEQKFWACNGQHAQILQITPHEHTGPLESDYHTHSDIYAPNPSATPTLSLATQWITNTPHVKEGLGMHSDKFHEVDFSIKRMDYWIGAILAIGIATGFCRSDMVTQQRKWQVYFPWEQIKSEWYMHPMRTEFLFPDMWYDAYPMAYHPAQNLNDSMQMADNELSNEILRGNINVLLTCDPSLWWPIPPGLVMQIAESMASWLVQEPITVIHSPKFFCFPHESGVYRLEDIRDYPQETSDTCVVNCMREEKRECKCEFCHYKICDALLGHWRANSLGMAGHEEIIKSCQTPLQRRFPIVYQPCAIQKANIRMMPHIQCIHTHETKQEPFWFYKYYMPWESTYRQSMPQSEFHWWMKTHMGLSGESCQWQDPETYRTQHNSFASSNDQMHDVLGGEKWYLLKGFYEPKYRPLDVPPLSFNGIRDEHWIIYGWFPCNRLDHTNIAGDIHSWREINAMICLSIIHCTATPMCIMERFSKMWDWVCRDLPQNNICLYYQGTYGQWEISVGAICNHTGCPQKQQCDKDHVNCPFKHAMECPQMYWSYFYNFEDMNILPLKNERQSRWWHSEETSQHQYQDGQMYEPIHTCAKNLYKSANDTWKMPSFWWTFKHKGYVDDQHTTECDIQAQESWGKTHVRMCWWDPEINDRDLYMICDRAEVHCHWHWQPVYLIWKTQAMFYRSQAFGYMLLQLVLYMEFLSKWYWTECKCPRLDIYGNQNFGVIQTPNSLQDRICKWSEVHAMHMDEHQVIGSCTFMISQPTQDAYYFQLPLIHRCTQWFVNDLFQNEHSTQPYLVYTHHSYQQKDVWIIRTNTKIKCDIDMIHDYPVLHFTGGRRGMYYYYHMYAHYWCSDTHCVVAIFQDRYYWSSHARNLFPADFEDKCPTPFRVRFDPKEVPTCYQTVWTPYMSEIFQTTPYWNPYHTHPKGLTNWRTY"
    alignments = pairwise2.align.localds(seq1, seq2, subs_mat, -5, -5)
    # len(alignments)
    # print(pairwise2.format_alignment(*alignments[0]))
    for alignment in alignments:
        seqA = alignment[0]
        seqB = alignment[1]
        score = alignment[2]
        start = alignment[3]
        end = alignment[4]
        seqA_local = seqA[start:end]
        seqB_local = seqB[start:end]

        seqA_local_no_gaps = seqA_local.replace('-', '')
        seqB_local_no_gaps = seqB_local.replace('-', '')

        print(score)
        print(seqA_local_no_gaps)
        print(seqB_local_no_gaps)
        print()

